#include<bits/stdc++.h>
using namespace std;
vector<int>grap[1000000];
bool vis[10000];
int dist[1000000],i,u,v,src;
void multisource(vector<int>sources)
{
    queue<int>Q;
    for(i=0; i<sources.size(); i++)
    {
        vis[sources[i]]=1;
        dist[sources[i]]=0;
        Q.push(sources[i]);
    }
     while(!Q.empty())
    {
        int first=Q.front();
        Q.pop();
        for(i=0; i<grap[first].size(); i++)
        {
            if(vis[grap[first][i]]==0)
            {
                vis[grap[first][i]] =1;
                dist[grap[first][i]]=dist[first]+1;
                Q.push(grap[first][i]);
            }
        }
    }
}
int main()
{
    int i,j,node,edge,source;
    cin>>node>>edge;
    for(i=1; i<=edge; i++)
    {
        cin>>u>>v;
        grap[u].push_back(v);
        grap[v].push_back(u);
    }
    cin>>source;
    vector<int>sources;
    for(i=1; i<=source; i++)
    {
        cin>>src;
        sources.push_back(src);
    }
    multisource(sources);

    for(i=1; i<=node; i++)
       cout<<"distance of "<<i<<" = "<<dist[i]<<endl;
}
