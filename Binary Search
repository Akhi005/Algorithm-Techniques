///////// Algorithm  ///////////
#include<bits/stdc++.h> ///(O(log n))
using namespace std;
#define ll long long
ll bs(ll arr[],ll l , ll r , ll x)
{
     if(l>r) return -2;
      ll mid=(l+r)/2;
      if(arr[mid]==x) return mid;
      else if(arr[mid]>x) return bs( arr, l , mid-1, x);
      else if(arr[mid]<x) return bs(arr, mid+1 ,  r , x);
}
ll itr(ll arr[],ll l , ll r , ll x)
{
    ll i=1;
     while(l<=r)
    {
       ll mid=(l+r)/2;
        if(arr[mid]==x)
        {
            cout<<"Found at "<<mid+1<<endl;
            i=0;
            break;
        }
        else if(arr[mid]>x)
            r=mid-1;
        else l=mid+1;
    }
    if(i==1) cout<<"item not found\n";
}
int main()
{
    ll i=1,x,j,l,r,mid,n,m;
    ll arr[]={7,5,4,1,2,3,6};
    n=sizeof(arr)/sizeof(arr[0]);
    x=7;
    sort(arr,arr+n);
    l=0,r=n-1;
    cout<<bs(arr,l,r,x)+1<<endl;
    cout<<binary_search(arr,arr+n,x)<<endl;// return exist or not(true or false)
    itr(arr,l,r,x);
}
*******************************************************************************************************************
//////   Find the first or last occurrence of a given number  //////////

#include<bits/stdc++.h>
using namespace std;
#define ll long long

int main()
{
    ll i=1,x,j,l,r,mid,n,m;
    ll arr[]= {7,5,4,7,1,2,2,3,7,6,2};// 1 2 3 4 5 6 7 7 7 7
    n=sizeof(arr)/sizeof(arr[0]);
    x=2;
    sort(arr,arr+n);
    l=0,r=n-1;
    while(l<=r)
    {
        ll mid=(l+r)/2;
        if(arr[mid]==x)
        {
            i=mid;
            r=mid-1;
        }
        else if(arr[mid]>x)
            r=mid-1;
        else l=mid+1;
    }
    cout<<i<<' ';
      l=0,r=n-1;
    while(l<=r)
    {
        ll mid=(l+r)/2;
        if(arr[mid]==x)
        {
             j=mid;
            l=mid+1;
        }
        else if(arr[mid]>x)
            r=mid-1;
        else l=mid+1;
    }
    cout<<j<<' ';
    cout<<endl<<j-i+1<<endl;
}
***********************************************************************************************
//////  
